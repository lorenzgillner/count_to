#!/usr/bin/python3
# -*- coding: utf-8 -*-

#  count_to is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  count_to is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with count_to.  If not, see <http://www.gnu.org/licenses/>.

import random
import sys

from termcolor import colored


numbers = []


def usage():
    print("Usage:\tpython3 count_to N")
    print("or:\t./count_to N")
    print("\nN must be a positive integer.\n")


def is_sorted(array):
    for element in array:
        current_element = 0
        next_element = 0
        
        for e in range(len(element)):
            current_element += int(element[((len(element) - e) - 1)]) * 10**e
        
        if array.index(element) != (len(array) - 1):
            for e in range(len(array[array.index(element) + 1])):
                next_element += int(array[array.index(element) + 1][((len(array[array.index(element) + 1]) - e) - 1)]) * 10**e

        else:
            for e in range(len(str(current_element))):
                next_element += int(str(current_element)[((len(str(current_element)) - e) - 1)]) * 10**e

        if current_element > next_element:
            return False

    return True


def bogosort(array):
    while not is_sorted(array):
        random.shuffle(array)

    return array


def main():
    if len(sys.argv) != 2:
        usage()
        sys.exit()

    number_range = int(sys.argv[1])

    for number in range(1, (number_range + 1)):
        numbers.append(str(number))

    random.shuffle(numbers)

    sorted_numbers = bogosort(numbers)

    for number in range(len(sorted_numbers)):
        output = ""

        for n in range(len(sorted_numbers[number])):
            output = str(output + str(sorted_numbers[number][n]))
        
        print(colored("{}".format(int(output)), "white"))


if __name__ == "__main__":
    main()
    sys.exit()

